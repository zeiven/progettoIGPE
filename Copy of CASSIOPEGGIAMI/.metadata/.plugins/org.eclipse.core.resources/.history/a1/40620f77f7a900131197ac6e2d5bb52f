package logica;

import javax.swing.RepaintManager;

import Grafica.*;
public abstract class AbstractCharacter extends AbstractStaticObject implements Character
{
	public abstract void ScalaLife();
    private final int defaultX;

    private final int defaultY;
    private int direction;
private WorldManager worldManager;
    
    protected boolean dead = false;

    protected boolean walk = true;
    protected boolean jump = false;
    protected boolean run= false;
    protected boolean shoot = false;
    protected boolean KeyJump = false;
    protected boolean KeyRun= false;
    protected boolean KeyShoot = false;
    
    protected World world;

    /**
     */
    protected AbstractCharacter( int defaultX, int defaultY, final World world)
    {
        super(defaultX, defaultY);
        this.defaultX = defaultX;

        this.defaultY = defaultY;
        this.world = world;
    }

    public int getDirection()
    {
        return direction;
    }

    public boolean isDead()
    {
        return dead;
    }

    @Override
    public void reset()
    {
        setX(defaultX);
        setY(defaultY);
        dead = false;
    }

    @Override
    public void setDirection( int direction)
    {
        this.direction = direction;
        
    }

    @Override
    public void update()
    {
         int y = getY();
         int x = getX();
        
        switch (direction)
        {
        
            case UP:
                if ((!(world.getCell(x-1, y) instanceof EnvironmentGround)) &&x>=0)
                {
                		
                	setX(x - 1);
                	world.update();
	                update();
	                controlloGravità(x-1,y);
	                
                }
                else
                {
                	 System.out.println("UP "+x+" "+y);
                	System.out.print("stop su");    
                }
//                if (y > 0 &&( !(world.getCell(x, y - 1) instanceof EnvironmentGround)&& !(world.getCell(x, y - 1) instanceof EnvironmentElevator)&& !(world.getCell(x, y - 1) instanceof Empty)))
//                {
//                	if(world.getCell(x+1, y - 1) instanceof EnvironmentStairway){
//                		setY(y - 1);
//                    	try {
//    						Thread.sleep(1000);
//    					} catch (InterruptedException e) {
//    						// TODO Auto-generated catch block
//    						e.printStackTrace();
//    					}
//                    	setX(x + 1);
//                    	try {
//    						Thread.sleep(1000);
//    					} catch (InterruptedException e) {
//    						// TODO Auto-generated catch block
//    						e.printStackTrace();
//    					}
//                    	setY(y - 1);
//                        }
//                }
//                else
//                {
//                	ScalaLife();
//                	
//                	
//               	
//                }
                break;
            case DOWN:
            	if ((!(world.getCell(x+1, y) instanceof EnvironmentGround)) && x<world.getHeight()-1)
                {
            		
            		
            		 System.out.println("down "+x+" "+y);
            		setX(x + 1);
            		controlloGravità(x+1,y);
            		
            		
            		
            		
                }
                else
                {
                	 System.out.println("down "+x+" "+y);
                	System.out.print("stop giu");
	               
                }
            	
            	
//            	if (y > 0 &&( !(world.getCell(x, y - 1) instanceof EnvironmentGround)&& !(world.getCell(x, y - 1) instanceof EnvironmentElevator) && !(world.getCell(x, y - 1) instanceof Empty)))
//                {
//                	if(world.getCell(x, y - 1) instanceof EnvironmentStairway && !(world.getCell(x, y - 1) instanceof Empty)){
//                	setY(y + 1);
//                	try {
//						Thread.sleep(1000);
//					} catch (InterruptedException e) {
//						// TODO Auto-generated catch block
//						e.printStackTrace();
//					}
//                	setX(x + 1);
//                	try {
//						Thread.sleep(1000);
//					} catch (InterruptedException e) {
//						// TODO Auto-generated catch block
//						e.printStackTrace();
//					}
//                	setY(y + 1);
//                    }
//                }
//                
//            	else
//                {
//            		ScalaLife();
//            		
//            		
//            		
//                }
                break;
            
            case LEFT:
            	if ((!(world.getCell(x, y-1) instanceof EnvironmentGround)) && y>0)
                {
            		 System.out.println("left "+x+" "+y);
            		setY(y - 1);
            		
            		controlloGravità(x,y-1);
                }
                else
                {
                	 System.out.println("left"+x+" "+y);
                	System.out.print("stop left");
	               
                }
                break;
            case RIGHT:
            	if ((!(world.getCell(x, y+1) instanceof EnvironmentGround)) && y<world.getWidth()-1)
                {
            		 System.out.println("right "+x+" "+y);
            		setY(y + 1);
            		
            		controlloGravità(x,y+1);
                }
                else
                {
                	 System.out.println("right"+x+" "+y);
                	System.out.print("stop right");
                }
                break;
            case DOPPIOSALTO:{
            	if (!((world.getCell(x-1, y) instanceof EnvironmentGround)&& (world.getCell(x-1, y+1) instanceof EnvironmentGround) && (world.getCell(x-1, y+2) instanceof EnvironmentGround)) &&x>=0){
            		System.out.println("CIAOOOOO");
            		
            			setX(x -1);
//            			
            			try {
							Thread.sleep(50);
						} catch (InterruptedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
            			
            			setY(y + 1);
            			try {
						Thread.sleep(50);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
            			setY(y + 2);
            			try {
							Thread.sleep(10);
						} catch (InterruptedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
            			
            			controlloGravità(x-1, y+2);
            			
            			
            			
            			
            		
            	}
            }
            case STOP:
                break;
            default:
                throw new RuntimeException("Direction not supported " + direction);
        }
    }

	private void controlloGravità(int x, int y) {
		while((!(world.getCell(x+1, y) instanceof EnvironmentGround))){
			
			setX(x + 1);
			System.out.println("downWHILE "+x+" "+y);	
			x++;
			world.update();
		}
		//setX(x - 1);
	}

    
    // fare altra classe
    
    
}